#include <pgmspace.h>
const unsigned char hz_0 PROGMEM[] =
{
	0xA3,0xC5,0x7F,0xFE,0xFF,0xFF,0x30,0x0E,0x60,0x06,0x60,0x06,0xE0,0x07,0xE0,0x07,
	0xE0,0x07,0xE0,0x07,0x60,0x06,0x60,0x06,0x70,0x0E,0xFF,0xFF,0x7F,0xFE,0xA3,0xC5/*"光",0*/
};
const unsigned char hz_1 PROGMEM[] =
{
	0x00,0x00,0xFF,0xFE,0xFF,0xFF,0xC1,0xFF,0xC1,0xC7,0xC1,0xFF,0xC0,0xFF,0xC0,0x03,
	0xC0,0x03,0xC0,0x03,0xC0,0x03,0xC0,0x03,0xC0,0x03,0xFF,0xFF,0xFF,0xFF,0x00,0x00/*"文",1*/
};
const unsigned char hz_2 PROGMEM[] =
{
	0x00,0x00,0x00,0xE0,0x01,0xF0,0x07,0xF3,0x7F,0x7F,0xFE,0x7F,0xF8,0x70,0xD8,0x77,
	0xD8,0x77,0xF8,0x70,0xFE,0x7F,0x7F,0x7F,0x07,0xF3,0x01,0xF0,0x00,0xE0,0x00,0x00/*"声",2*/
};
const unsigned char hz_3 PROGMEM[] =
{
	0x07,0xE0,0x07,0xF0,0x0E,0x78,0x1C,0x1C,0x38,0x0C,0x70,0x06,0x70,0x06,0x60,0x06,
	0x60,0x06,0x67,0x06,0x67,0x06,0x77,0x06,0x7F,0x8E,0x3F,0x9C,0x1D,0xFC,0x0C,0xF0/*"火",3*/
};
const unsigned char hz_4 PROGMEM[] =
{
	0x0C,0x00,0x0E,0x00,0x0F,0x00,0x0F,0x80,0x0F,0xC0,0x0F,0xF0,0x0F,0xF8,0x0F,0xFC,
	0x0F,0xFE,0x0F,0xFC,0x0F,0xF8,0x0F,0xF0,0x0F,0xC0,0x0F,0x80,0x0E,0x00,0x0C,0x00/*"右",4*/
};
const unsigned char hz_5 PROGMEM[] =
{
	0x00,0x00,0x07,0xF0,0x0F,0xF8,0x1F,0x7C,0x38,0x0E,0x70,0x07,0xFC,0x07,0xFC,0x03,
	0xF0,0x03,0x70,0x03,0x60,0x07,0x00,0x07,0x08,0x0E,0x1F,0x7C,0x1F,0xF8,0x07,0xF0/*"刷",5*/
};
const unsigned char hz_6 PROGMEM[] =
{
	0x7E,0x7E,0xFE,0x7F,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0x00,0x00,0xFF,0xFF,
	0xFF,0xFF,0x00,0x00,0x60,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xFE,0x7F,0x7E,0x7F/*"存",6*/
};

struct FNT_HZ // 汉字字模数据结构
{
  char  Index[4];	// 汉字内码索引,如"中",在UTF-8编码下，每个汉字占3个字节，第四个是结束符0
  const unsigned char* hz_Id;  // 点阵码数据，存放内码后对应的点阵序列每个字需要32个字节的点阵序列
  unsigned char hz_width;    //序列长度
};

//定义结构数组
PROGMEM const FNT_HZ hanzi[] =
{
  {"光", hz_0,16}, {"文", hz_1,16}, {"声", hz_2,16}, {"火", hz_3,16}, {"右", hz_4,16},
  {"刷", hz_5,16}, {"存", hz_6,16}
};
